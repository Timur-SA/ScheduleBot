from aiogram import Router
from aiogram.types import Message
from aiogram.filters import CommandStart, Command
import re
import data
router = Router()


def getEvents(deltaDays=0):
    events = data.getDayData(data.loadGlobalFile(), deltaDays)
    if events:
        return "\n".join(["üìù –°–æ–±—ã—Ç–∏—è:", data.prepareDayMessage(events)])
    else:
        return "üìù –°–æ–±—ã—Ç–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç!"

def getNotifications(uid, deltaDays=0):
    notifications = data.getDayData(data.loadLocalFile(uid), deltaDays)
    if notifications:
        return "\n".join(["üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è:", data.prepareDayMessage(notifications)])
    else:
        return "üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç"


@router.message(CommandStart())
async def start(msg: Message):
    await msg.reply(f"–ü—Ä–∏–≤–µ—Ç! –Ø - –±–æ—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á\n–£ –º–µ–Ω—è –µ—Å—Ç—å –∫–æ–º–∞–Ω–¥—ã /help –∏ /schedule, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç —Ç–µ–±–µ —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ—ë –ø–µ—Ä–≤–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ!")


@router.message(Command("today"))
async def today(msg: Message):
    await msg.answer(getEvents())
    await msg.answer(getNotifications(msg.from_user.id))
    
@router.message(Command("tomorrow"))
async def tomorrow(msg: Message):
    await msg.answer(getEvents(deltaDays=1))
    await msg.answer(getNotifications(msg.from_user.id, deltaDays=1))

@router.message(Command("week"))
async def week(msg: Message): pass


@router.message(Command("add"))
async def add(msg: Message):
    if(re.match(r"^/add (.+?) (\d{4}-\d{2}-\d{2}) (\d{2}:\d{2})$", msg.text)):
        args = msg.text.split()[1:]
        status = data.writeEvent(args, msg.from_user.id)

        if(status=="OK"): await msg.answer("üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ!")
        elif(status=="replacement"): await msg.answer("üîÑ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ!")
        elif(status=="unactual"): await msg.answer("üòÖ –í—Ä–µ–º—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è —É–∂–µ –ø—Ä–æ—à–ª–æ")
        else: raise RuntimeError()

    else:
        await msg.answer("‚ùó –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è!")
        await msg.answer("–î–æ–±–∞–≤–∏—Ç—å —Å–≤–æ—ë –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: `/add –ù–∞–∑–≤–∞–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ì–ì–ì–ì-–ú–ú-–î–î —á—á:–º–º`", parse_mode="markdown")


@router.message(Command("help"))
async def help(msg: Message):
    await msg.reply(f"""/today - –í—ã–≤–µ—Å—Ç–∏ —Å–æ–±—ã—Ç–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
/tomorrow - –í—ã–≤–µ—Å—Ç–∏ —Å–æ–±—ã—Ç–∏—è –Ω–∞ –∑–∞–≤—Ç—Ä–∞
/week - –í—ã–≤–µ—Å—Ç–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π –Ω–∞ –≤—Å—é –Ω–µ–¥–µ–ª—é
/add - –î–æ–±–∞–≤–∏—Ç—å —Å–≤–æ—ë —Å–æ–±—ã—Ç–∏–µ (`/add [–ù–∞–∑–≤–∞–Ω–∏–µ] <–ì–ì–ì–ì-–ú–ú-–î–î> <—á—á:–º–º>`)
/help - –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ 
/schedule - –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –∫ –∫–æ–º–∞–Ω–¥–µ /add (–¥–æ–±–∞–≤–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ)""",
parse_mode="markdown")

@router.message(Command("schedule"))
async def schedule(msg: Message):
    await msg.reply(f"-–ö–∞–∫ –¥–æ–±–∞–≤–∏—Ç—å —Å–≤–æ—ë –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ?\n/add (–ù–∞–∑–≤–∞–Ω–∏–µ) (–î–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: <–ì–ì–ì–ì-–ú–ú-–î–î>) (–í—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ: <—á—á:–º–º>)\n–ü—Ä–∏–º–µ—Ä: `/add –í–∞—à–µ –ø–µ—Ä–≤–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ!ü•≥ 2025-07-31 15:00`", parse_mode="markdown")